name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # Existing codes likely still have "master" as the primary branch
  # Both are tracked here to keep legacy and new codes working
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # Automated tests:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * TUE"

jobs:

  test:
    name: Pytest
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - os: ubuntu-latest
            python-version: "3.7"
          - os: ubuntu-latest
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.7"
          - os: windows-latest
            python-version: "3.7"
    steps:
    - uses: actions/checkout@v1
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml
        channels: conda-forge,defaults
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    - name: Install package
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
    - name: Run package tests
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        pytest -v --cov=kissim --cov-report=xml --cov-config=setup.cfg --color=yes kissim/tests/
    - name: Run docs notebooks tests (on Linux only)
      shell: bash -l {0}
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          PYTEST_ARGS="--nbval-lax --current-env --nbval-cell-timeout=900"
          pytest $PYTEST_ARGS docs/tutorials/*.ipynb -vvv
        else
              echo "Do not run notebooks under $RUNNER_OS"
        fi
    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

  lint-format-package:
    runs-on: ubuntu-latest
    env:
      CI_OS: ubuntu-latest
      PACKAGE: "kissim"
      PYVER: "3.7"
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      # More info on options: https://github.com/conda-incubator/setup-miniconda
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: devtools/conda-envs/test_env.yaml
          channels: conda-forge,defaults,bioconda
          activate-environment: test
          auto-update-conda: true
          auto-activate-base: false
          show-channel-urls: true
          # mamba-version: "*"
      - name: Install linter and formatter
        shell: bash -l {0}
        run: |
          conda install -y pylint black
      - name: Run pylint
        shell: bash -l {0}
        run: |
          pylint $PACKAGE/
      - name: Run black check
        shell: bash -l {0}
        if: always()
        run: |
          black --check -l 99 $PACKAGE/

  lint-format-notebooks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install notebook linter and formatter
        run: |
          python -m pip install black-nb
          python -m pip install flake8-nb
      - name: Run black-nb
        shell: bash
        run: |
          black-nb -l 99 --check docs/tutorials/*ipynb
      - name: Run flake8-nb
        shell: bash
        run: |
          flake8-nb --config setup.cfg docs/tutorials/*ipynb

  docs:
    runs-on: ubuntu-latest
    env:
      CI_OS: ubuntu-latest
      PACKAGE: "kissim"
      PYVER: "3.7"
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      # More info on options: https://github.com/conda-incubator/setup-miniconda
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: devtools/conda-envs/test_env.yaml
          channels: conda-forge,defaults,bioconda
          activate-environment: test
          auto-update-conda: true
          auto-activate-base: false
          show-channel-urls: true
          # mamba-version: "*"
      - name: Install package
        shell: bash -l {0}
        run: |
          python -m pip install . --no-deps
          conda list
      - name: Run sphinx
        shell: bash -l {0}
        run: |
          cd docs
          make clean
          SPHINXOPTS="-W -T --keep-going" make html
